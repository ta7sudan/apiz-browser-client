{"version":3,"file":"apizclient.esm.js","sources":["../src/index.ts"],"sourcesContent":["/* global DEBUG */\n// tslint:disable-next-line\nimport { MIMEType, ajax, AsyncOptions } from 'tinyjx';\n// tslint:disable-next-line\nimport { APIzClient, HTTPMethodLowerCase, ClientRequestOptions, HTTPMethodUpperCase } from \"apiz-ng\";\n\nconst retryMap: {\n\t[k: number]: number;\n\t// tslint:disable-next-line\n} = {}, isFn = (f: any): f is Function => typeof f === 'function';\nlet reqId = Date.now();\n\nfunction request(opts: RequestOptions): Promise<any> {\n\t// tslint:disable-next-line\n\tlet { url, method, type, data, beforeSend, afterResponse, complete, retry = 0, options = {}, id = ++reqId } = opts, reqData: any;\n\tretryMap[id] = -~retryMap[id];\n\topts.id = id;\n\tif (data) {\n\t\treqData = options.data = data;\n\t\toptions.contentType = type;\n\t}\n\toptions.url = url;\n\toptions.method = method;\n\treturn new Promise((rs, rj) => {\n\t\tajax({\n\t\t\tbeforeSend,\n\t\t\t// $防止遮蔽\n\t\t\tsuccess($data, xhr) {\n\t\t\t\tdelete retryMap[id];\n\t\t\t\t// 算了, 这个异常还是让它直接crash掉吧, 和后面保持一致\n\t\t\t\tisFn(afterResponse) && afterResponse($data, 'success', xhr, url, reqData);\n\t\t\t\trs({\n\t\t\t\t\t$data,\n\t\t\t\t\tnext() {\n\t\t\t\t\t\tisFn(complete) && complete($data, xhr, url, reqData);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// $防止遮蔽\n\t\t\terror(err, $data, xhr) {\n\t\t\t\tif (retryMap[id] < retry + 1) {\n\t\t\t\t\trs(request(opts));\n\t\t\t\t} else {\n\t\t\t\t\tdelete retryMap[id];\n\t\t\t\t\tisFn(afterResponse) && afterResponse($data, 'error', xhr, url, reqData);\n\t\t\t\t\trj({\n\t\t\t\t\t\terr,\n\t\t\t\t\t\tnext() {\n\t\t\t\t\t\t\tisFn(complete) && complete(undefined, xhr, url, reqData);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t...options\n\t\t});\n\t});\n}\n\nexport interface APIzClientOptions {\n\tbeforeSend?(xhr: XMLHttpRequest): void | boolean,\n\tafterResponse?(resData: any, status: string, xhr: XMLHttpRequest, url: string, reqData: any): void,\n\tcomplete?(resData: any, xhr: XMLHttpRequest, url: string, reqData: any): void,\n\tretry?: number\n}\n\ninterface RequestOptions extends APIzClientOptions {\n\tid?: number;\n\turl: string;\n\ttype?: APIzClientType;\n\toptions?: AsyncOptions;\n\tmethod: HTTPMethodUpperCase;\n\tdata?: any;\n}\n\nexport type APIzClientType = keyof MIMEType;\n\nexport type APIzClientMeta = any;\n\nexport type APIzClientInstance = APIzClient<APIzClientType, APIzClientMeta, AsyncOptions, HTTPMethodLowerCase>;\n\nexport { AsyncOptions as APIzRequestOptions };\n\n/**\n * { beforeSend, afterResponse, retry }\n */\nexport default function (opts: APIzClientOptions = {}): APIzClientInstance {\n\treturn {\n\t\t...['get', 'head'].reduce((prev, cur) =>\n\t\t\t(prev[cur as HTTPMethodLowerCase] = ({ name, meta, url, options }: ClientRequestOptions<APIzClientType, APIzClientMeta, AsyncOptions>) => request({\n\t\t\t\t...opts,\n\t\t\t\turl,\n\t\t\t\tmethod: cur.toUpperCase() as HTTPMethodUpperCase,\n\t\t\t\toptions\n\t\t\t}), prev), {} as APIzClient<APIzClientType, APIzClientMeta, AsyncOptions, HTTPMethodLowerCase>),\n\t\t...['post', 'put', 'patch', 'delete', 'options'].reduce((prev, cur) =>\n\t\t\t(prev[cur as HTTPMethodLowerCase] = ({ name, meta, url, body, options, type }: ClientRequestOptions<APIzClientType, APIzClientMeta, AsyncOptions>) => request({\n\t\t\t\t...opts,\n\t\t\t\turl,\n\t\t\t\ttype,\n\t\t\t\toptions,\n\t\t\t\tmethod: cur.toUpperCase() as HTTPMethodUpperCase,\n\t\t\t\tdata: body\n\t\t\t}), prev), {} as APIzClient<APIzClientType, APIzClientMeta, AsyncOptions, HTTPMethodLowerCase>)\n\t};\n}\n"],"names":["retryMap","isFn","f","reqId","Date","now","request","opts","url","method","type","data","beforeSend","afterResponse","complete","retry","options","id","reqData","contentType","Promise","rs","rj","ajax","success","$data","xhr","next","error","err","undefined","reduce","prev","cur","name","meta","toUpperCase","body"],"mappings":"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"}