{"version":3,"file":"apizclient.umd.js","sources":["../src/index.ts"],"sourcesContent":["/* global DEBUG */\n// tslint:disable-next-line\nimport { MIMEType, ajax, AjaxOptions } from 'tinyjx';\n// tslint:disable-next-line\nimport { APIzClient, HTTPMethodLowerCase, ClientRequestOptions, APIzClientRequest, HTTPMethodUpperCase } from 'apiz-ng';\n\nexport type APIzClientType = keyof MIMEType;\n\nexport type APIzClientMeta = any;\n\nexport type APIzClientInstance = APIzClient<AjaxOptions, APIzClientType, any, HTTPMethodLowerCase>;\n\nexport { AjaxOptions as APIzRawRequestOptions };\n\nexport interface APIzClientConstructorOptions {\n\tbeforeSend?: (options: AjaxOptions) => void | boolean,\n\tafterResponse?: (resData: any, status: 'success' | 'error', xhr: XMLHttpRequest, url: string, reqData: any) => void,\n\terror?: (errType: 'recoverableError' | 'unrecoverableError', err: Error, data: any, xhr: XMLHttpRequest) => PromiseResult | boolean | undefined,\n\tretry?: number\n}\n\ninterface APIzClientConstructorOptionsWithMethod extends APIzClientConstructorOptions {\n\tmethod: HTTPMethodUpperCase;\n}\n\ntype Callable = (...args: Array<any>) => any;\n\ninterface PromiseResult {\n\tdata?: any;\n\tstatus?: 'recoverableError' | 'unrecoverableError';\n\txhr: XMLHttpRequest;\n\terr?: Error;\n}\n\nconst isFn = (f: any): f is Callable => typeof f === 'function';\n\nfunction isPromise<T = any>(p: any): p is Promise<T> {\n\treturn !!(p && typeof p.then === 'function');\n}\n\nasync function pRetry<Result = any>(\n\tthis: any,\n\tfn: (...args: any[]) => any,\n\t{\n\t\tretry,\n\t\tbeforeRetry\n\t}: {\n\t\tretry: number;\n\t\tbeforeRetry?: (retryCount: number, e: Error) => any;\n\t},\n\talreadyTried: number = 1\n): Promise<Result> {\n\tlet rst: Result | Promise<Result> | null = null;\n\tif (retry < 0 || (retry > Number.MAX_SAFE_INTEGER && retry !== Infinity)) {\n\t\tthrow new Error('retry must be between 0 to Number.MAX_SAFE_INTEGER or be Infinity');\n\t}\n\n\ttry {\n\t\trst = fn.call(this);\n\t\tif (isPromise<Result>(rst)) {\n\t\t\trst = await rst;\n\t\t}\n\t} catch (e) {\n\t\tif (beforeRetry) {\n\t\t\tbeforeRetry(alreadyTried, e);\n\t\t}\n\t\tif (retry) {\n\t\t\treturn pRetry<Result>(\n\t\t\t\tfn,\n\t\t\t\t{\n\t\t\t\t\t// tslint:disable-next-line\n\t\t\t\t\tretry: --retry,\n\t\t\t\t\tbeforeRetry\n\t\t\t\t},\n\t\t\t\t// tslint:disable-next-line\n\t\t\t\t++alreadyTried\n\t\t\t);\n\t\t} else {\n\t\t\tthrow e;\n\t\t}\n\t}\n\treturn rst!;\n}\n\n\nfunction createRequest({\n\t\tmethod,\n\t\tbeforeSend,\n\t\tafterResponse,\n\t\terror,\n\t\tretry = 0\n\t}: APIzClientConstructorOptionsWithMethod\n): APIzClientRequest<AjaxOptions, APIzClientType, APIzClientMeta> {\n\treturn async function request({\n\t\turl,\n\t\toptions,\n\t\tbody,\n\t\theaders,\n\t\ttype,\n\t\thandleError = true\n\t}: ClientRequestOptions<AjaxOptions, APIzClientType, APIzClientMeta>): Promise<PromiseResult> {\n\t\tlet $options: AjaxOptions | undefined;\n\t\tif (options) {\n\t\t\t$options = {\n\t\t\t\t...options,\n\t\t\t\turl,\n\t\t\t\tmethod\n\t\t\t};\n\t\t} else {\n\t\t\t$options = {\n\t\t\t\turl,\n\t\t\t\tmethod,\n\t\t\t\tprocessData: false,\n\t\t\t\tdata: body,\n\t\t\t\tcontentType: type,\n\t\t\t\theaders\n\t\t\t};\n\t\t}\n\n\t\tif (isFn(beforeSend)) {\n\t\t\tconst rst = await beforeSend($options);\n\t\t\tif (rst === false) {\n\t\t\t\tthrow new Error('apiz: cancel');\n\t\t\t}\n\t\t}\n\n\t\tlet result: PromiseResult | undefined, e: PromiseResult | undefined;\n\t\ttry {\n\t\t\t// tslint:disable-next-line\n\t\t\tresult = await pRetry<PromiseResult>(() => new Promise((rs, rj) => {\n\t\t\t\tajax({\n\t\t\t\t\t...$options,\n\t\t\t\t\tsuccess(data: any, xhr: XMLHttpRequest): void {\n\t\t\t\t\t\trs({\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\txhr\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\trecoverableError(err: Error, data: any, xhr: XMLHttpRequest): void {\n\t\t\t\t\t\trj({\n\t\t\t\t\t\t\tstatus: 'recoverableError',\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\txhr,\n\t\t\t\t\t\t\terr\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tunrecoverableError(err: Error, xhr: XMLHttpRequest): void {\n\t\t\t\t\t\trj({\n\t\t\t\t\t\t\tstatus: 'unrecoverableError',\n\t\t\t\t\t\t\tdata: undefined,\n\t\t\t\t\t\t\txhr,\n\t\t\t\t\t\t\terr\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}), {\n\t\t\t\tretry\n\t\t\t});\n\t\t} catch ($err) {\n\t\t\te = $err;\n\t\t}\n\n\t\tconst resData = result && result.data || e && e.data,\n\t\t\tstatus = result && !e ? 'success' : 'error',\n\t\t\t$xhr = result && result.xhr || e && e.xhr;\n\t\tif ((result || e && e.status === 'recoverableError') && isFn(afterResponse)) {\n\t\t\tawait afterResponse(resData, status, $xhr!, url, body);\n\t\t}\n\n\t\tif (e) {\n\t\t\tlet recoverable: PromiseResult | boolean | undefined = false;\n\t\t\tif (isFn(error) && handleError) {\n\t\t\t\trecoverable = await error(e.status!, e.err!, e.data, e.xhr);\n\t\t\t}\n\t\t\t// 返回false, 不可恢复\n\t\t\tif (recoverable === false || recoverable === undefined) {\n\t\t\t\tthrow e;\n\t\t\t// 有非undefined的返回值, 可以恢复, 返回值作为结果\n\t\t\t} else {\n\t\t\t\treturn recoverable as PromiseResult;\n\t\t\t}\n\t\t} else {\n\t\t\treturn result!;\n\t\t}\n\t};\n}\n\n\n/**\n * { beforeSend, afterResponse, retry }\n */\nexport default function (opts: APIzClientConstructorOptions = {}): APIzClientInstance {\n\treturn (['get', 'head', 'post', 'put', 'patch', 'delete', 'options'] as Array<HTTPMethodLowerCase>)\n\t\t.reduce(\n\t\t\t(prev: APIzClientInstance, cur: HTTPMethodLowerCase) => (prev[cur] = createRequest({\n\t\t\t\t...opts,\n\t\t\t\tmethod: cur.toUpperCase() as HTTPMethodUpperCase\n\t\t\t}), prev),\n\t\t\t{} as APIzClientInstance\n\t\t);\n}\n"],"names":["isFn","f","isPromise","p","then","pRetry","fn","retry","beforeRetry","alreadyTried","rst","Number","MAX_SAFE_INTEGER","Infinity","Error","call","e","createRequest","method","beforeSend","afterResponse","error","request","url","options","body","headers","type","handleError","$options","processData","data","contentType","result","Promise","rs","rj","ajax","success","xhr","recoverableError","err","status","unrecoverableError","undefined","$err","resData","$xhr","recoverable","opts","reduce","prev","cur","toUpperCase"],"mappings":"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"}