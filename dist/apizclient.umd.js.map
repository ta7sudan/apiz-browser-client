{"version":3,"file":"apizclient.umd.js","sources":["../src/index.ts"],"sourcesContent":["/* global DEBUG */\n// tslint:disable-next-line\nimport { MIMEType, ajax, AjaxOptions } from 'tinyjx';\n// tslint:disable-next-line\nimport { APIzClient, HTTPMethodLowerCase, ClientRequestOptions, APIzClientRequest, HTTPMethodUpperCase } from 'apiz-ng';\n\nexport type APIzClientType = keyof MIMEType;\n\nexport type APIzClientMeta = any;\n\nexport type APIzClientInstance = APIzClient<AjaxOptions, APIzClientType, any, HTTPMethodLowerCase>;\n\nexport { AjaxOptions as APIzRawRequestOptions };\n\nexport interface APIzClientConstructorOptions {\n\tbeforeSend?: (xhr: XMLHttpRequest) => void | boolean,\n\tafterResponse?: (resData: any, status: string, xhr: XMLHttpRequest, url: string, reqData: any) => void,\n\terror?: (errType: string, err: Error, data: any, xhr: XMLHttpRequest) => void,\n\tretry?: number\n}\n\ninterface APIzClientConstructorOptionsWithMethod extends APIzClientConstructorOptions {\n\tmethod: HTTPMethodUpperCase;\n}\n\ntype Callable = (...args: Array<any>) => any;\n\nconst isFn = (f: any): f is Callable => typeof f === 'function';\n\nfunction isPromise<T = any>(p: any): p is Promise<T> {\n\treturn !!(p && typeof p.then === 'function');\n}\n\nasync function pRetry<Result = any>(\n\tthis: any,\n\tfn: (...args: any[]) => any,\n\t{\n\t\tretry,\n\t\tbeforeRetry\n\t}: {\n\t\tretry: number;\n\t\tbeforeRetry?: (retryCount: number, e: Error) => any;\n\t},\n\talreadyTried: number = 1\n): Promise<Result> {\n\tlet rst: Result | Promise<Result> | null = null;\n\tif (retry < 0 || (retry > Number.MAX_SAFE_INTEGER && retry !== Infinity)) {\n\t\tthrow new Error('retry must be between 0 to Number.MAX_SAFE_INTEGER or be Infinity');\n\t}\n\n\ttry {\n\t\trst = fn.call(this);\n\t\tif (isPromise<Result>(rst)) {\n\t\t\trst = await rst;\n\t\t}\n\t} catch (e) {\n\t\tif (beforeRetry) {\n\t\t\tbeforeRetry(alreadyTried, e);\n\t\t}\n\t\tif (retry) {\n\t\t\treturn pRetry<Result>(\n\t\t\t\tfn,\n\t\t\t\t{\n\t\t\t\t\t// tslint:disable-next-line\n\t\t\t\t\tretry: --retry,\n\t\t\t\t\tbeforeRetry\n\t\t\t\t},\n\t\t\t\t// tslint:disable-next-line\n\t\t\t\t++alreadyTried\n\t\t\t);\n\t\t} else {\n\t\t\tthrow e;\n\t\t}\n\t}\n\treturn rst!;\n}\n\n\nfunction createRequest({\n\t\tmethod,\n\t\tbeforeSend,\n\t\tafterResponse,\n\t\terror,\n\t\tretry = 0\n\t}: APIzClientConstructorOptionsWithMethod\n): APIzClientRequest<AjaxOptions, APIzClientType, APIzClientMeta> {\n\treturn function request({\n\t\turl,\n\t\toptions,\n\t\tbody,\n\t\theaders,\n\t\ttype,\n\t\thandleError = true\n\t}: ClientRequestOptions<AjaxOptions, APIzClientType, APIzClientMeta>): Promise<any> {\n\t\tlet $options: AjaxOptions | undefined, count = 0;\n\t\tif (options) {\n\t\t\t$options = {\n\t\t\t\t...options,\n\t\t\t\turl,\n\t\t\t\tmethod\n\t\t\t};\n\t\t} else {\n\t\t\t$options = {\n\t\t\t\turl,\n\t\t\t\tmethod,\n\t\t\t\tprocessData: false,\n\t\t\t\tdata: body,\n\t\t\t\tcontentType: type,\n\t\t\t\theaders\n\t\t\t};\n\t\t}\n\t\treturn pRetry(() => {\n\t\t\t// tslint:disable-next-line\n\t\t\treturn new Promise((rs, rj) => {\n\t\t\t\tajax({\n\t\t\t\t\t...$options,\n\t\t\t\t\tbeforeSend(xhr: XMLHttpRequest): any {\n\t\t\t\t\t\tif (!count && isFn(beforeSend)) {\n\t\t\t\t\t\t\treturn beforeSend(xhr);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsuccess(data: any, xhr: XMLHttpRequest): void {\n\t\t\t\t\t\tisFn(afterResponse) && count === retry && afterResponse(data, 'success', xhr, url, body);\n\t\t\t\t\t\trs({\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\txhr\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\trecoverableError(err: Error, data: any, xhr: XMLHttpRequest): void {\n\t\t\t\t\t\tisFn(afterResponse) && count === retry && afterResponse(data, 'error', xhr, url, body);\n\t\t\t\t\t\tisFn(error) && count === retry && handleError && error('recoverableError', err, data, xhr);\n\t\t\t\t\t\trj({\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tunrecoverableError(err: Error, xhr: XMLHttpRequest): void {\n\t\t\t\t\t\tisFn(error) && count === retry && handleError && error('unrecoverableError', err, undefined, xhr);\n\t\t\t\t\t\trj({\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\tdata: undefined\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}, {\n\t\t\tretry,\n\t\t\tbeforeRetry(): void {\n\t\t\t\t++count;\n\t\t\t}\n\t\t});\n\t};\n}\n\n\n/**\n * { beforeSend, afterResponse, retry }\n */\nexport default function (opts: APIzClientConstructorOptions = {}): APIzClientInstance {\n\treturn (['get', 'head', 'post', 'put', 'patch', 'delete', 'options'] as Array<HTTPMethodLowerCase>)\n\t\t.reduce(\n\t\t\t(prev: APIzClientInstance, cur: HTTPMethodLowerCase) => (prev[cur] = createRequest({\n\t\t\t\t...opts,\n\t\t\t\tmethod: cur.toUpperCase() as HTTPMethodUpperCase\n\t\t\t}), prev),\n\t\t\t{} as APIzClientInstance\n\t\t);\n}\n"],"names":["isFn","f","isPromise","p","then","pRetry","fn","retry","beforeRetry","alreadyTried","rst","Number","MAX_SAFE_INTEGER","Infinity","Error","call","e","createRequest","method","beforeSend","afterResponse","error","request","url","options","body","headers","type","handleError","$options","count","processData","data","contentType","Promise","rs","rj","ajax","xhr","success","recoverableError","err","unrecoverableError","undefined","opts","reduce","prev","cur","toUpperCase"],"mappings":"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"}