{"version":3,"file":"apizclient.min.js","sources":["apizclient.js"],"sourcesContent":["/* global DEBUG */\n// tslint:disable-next-line\nimport { MIMEType, ajax, AjaxOptions } from 'tinyjx';\n// tslint:disable-next-line\nimport { APIzClient, HTTPMethodLowerCase, ClientRequestOptions, APIzClientRequest, HTTPMethodUpperCase } from 'apiz-ng';\n\nexport type APIzClientType = keyof MIMEType;\n\nexport type APIzClientMeta = any;\n\nexport type APIzClientInstance = APIzClient<AjaxOptions, APIzClientType, any, HTTPMethodLowerCase>;\n\nexport { AjaxOptions as APIzRawRequestOptions };\n\nexport interface APIzClientConstructorOptions {\n\tbeforeSend?: (options: AjaxOptions) => void | boolean,\n\tafterResponse?: (resData: any, status: 'success' | 'error', xhr: XMLHttpRequest, url: string, reqData: any) => void,\n\terror?: (errType: 'recoverableError' | 'unrecoverableError', err: Error, data: any, xhr: XMLHttpRequest) => PromiseResult | boolean | undefined,\n\tretry?: number\n}\n\ninterface APIzClientConstructorOptionsWithMethod extends APIzClientConstructorOptions {\n\tmethod: HTTPMethodUpperCase;\n}\n\ntype Callable = (...args: Array<any>) => any;\n\ninterface PromiseResult {\n\tdata?: any;\n\tstatus?: 'recoverableError' | 'unrecoverableError';\n\txhr: XMLHttpRequest;\n\terr?: Error;\n}\n\nconst isFn = (f: any): f is Callable => typeof f === 'function';\n\nfunction isPromise<T = any>(p: any): p is Promise<T> {\n\treturn !!(p && typeof p.then === 'function');\n}\n\nasync function pRetry<Result = any>(\n\tthis: any,\n\tfn: (...args: any[]) => any,\n\t{\n\t\tretry,\n\t\tbeforeRetry\n\t}: {\n\t\tretry: number;\n\t\tbeforeRetry?: (retryCount: number, e: Error) => any;\n\t},\n\talreadyTried: number = 1\n): Promise<Result> {\n\tlet rst: Result | Promise<Result> | null = null;\n\tif (retry < 0 || (retry > Number.MAX_SAFE_INTEGER && retry !== Infinity)) {\n\t\tthrow new Error('retry must be between 0 to Number.MAX_SAFE_INTEGER or be Infinity');\n\t}\n\n\ttry {\n\t\trst = fn.call(this);\n\t\tif (isPromise<Result>(rst)) {\n\t\t\trst = await rst;\n\t\t}\n\t} catch (e) {\n\t\tif (beforeRetry) {\n\t\t\tbeforeRetry(alreadyTried, e);\n\t\t}\n\t\tif (retry) {\n\t\t\treturn pRetry<Result>(\n\t\t\t\tfn,\n\t\t\t\t{\n\t\t\t\t\t// tslint:disable-next-line\n\t\t\t\t\tretry: --retry,\n\t\t\t\t\tbeforeRetry\n\t\t\t\t},\n\t\t\t\t// tslint:disable-next-line\n\t\t\t\t++alreadyTried\n\t\t\t);\n\t\t} else {\n\t\t\tthrow e;\n\t\t}\n\t}\n\treturn rst!;\n}\n\n\nfunction createRequest({\n\t\tmethod,\n\t\tbeforeSend,\n\t\tafterResponse,\n\t\terror,\n\t\tretry = 0\n\t}: APIzClientConstructorOptionsWithMethod\n): APIzClientRequest<AjaxOptions, APIzClientType, APIzClientMeta> {\n\treturn async function request({\n\t\turl,\n\t\toptions,\n\t\tbody,\n\t\theaders,\n\t\ttype,\n\t\thandleError = true\n\t}: ClientRequestOptions<AjaxOptions, APIzClientType, APIzClientMeta>): Promise<PromiseResult> {\n\t\tlet $options: AjaxOptions | undefined;\n\t\tif (options) {\n\t\t\t$options = {\n\t\t\t\t...options,\n\t\t\t\turl,\n\t\t\t\tmethod\n\t\t\t};\n\t\t} else {\n\t\t\t$options = {\n\t\t\t\turl,\n\t\t\t\tmethod,\n\t\t\t\tprocessData: false,\n\t\t\t\tdata: body,\n\t\t\t\tcontentType: type,\n\t\t\t\theaders\n\t\t\t};\n\t\t}\n\n\t\tif (isFn(beforeSend)) {\n\t\t\tconst rst = await beforeSend($options);\n\t\t\tif (rst === false) {\n\t\t\t\tthrow new Error('apiz: cancel');\n\t\t\t}\n\t\t}\n\n\t\tlet result: PromiseResult | undefined, e: PromiseResult | undefined;\n\t\ttry {\n\t\t\t// tslint:disable-next-line\n\t\t\tresult = await pRetry<PromiseResult>(() => new Promise((rs, rj) => {\n\t\t\t\tajax({\n\t\t\t\t\t...$options,\n\t\t\t\t\tsuccess(data: any, xhr: XMLHttpRequest): void {\n\t\t\t\t\t\trs({\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\txhr\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\trecoverableError(err: Error, data: any, xhr: XMLHttpRequest): void {\n\t\t\t\t\t\trj({\n\t\t\t\t\t\t\tstatus: 'recoverableError',\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\txhr,\n\t\t\t\t\t\t\terr\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tunrecoverableError(err: Error, xhr: XMLHttpRequest): void {\n\t\t\t\t\t\trj({\n\t\t\t\t\t\t\tstatus: 'unrecoverableError',\n\t\t\t\t\t\t\tdata: undefined,\n\t\t\t\t\t\t\txhr,\n\t\t\t\t\t\t\terr\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}), {\n\t\t\t\tretry\n\t\t\t});\n\t\t} catch ($err) {\n\t\t\te = $err;\n\t\t}\n\n\t\tconst resData = result && result.data || e && e.data,\n\t\t\tstatus = result && !e ? 'success' : 'error',\n\t\t\t$xhr = result && result.xhr || e && e.xhr;\n\t\tif ((result || e && e.status === 'recoverableError') && isFn(afterResponse)) {\n\t\t\tawait afterResponse(resData, status, $xhr!, url, body);\n\t\t}\n\n\t\tif (e) {\n\t\t\tlet recoverable: PromiseResult | boolean | undefined = false;\n\t\t\tif (isFn(error) && handleError) {\n\t\t\t\trecoverable = await error(e.status!, e.err!, e.data, e.xhr);\n\t\t\t}\n\t\t\t// 返回false, 不可恢复\n\t\t\tif (recoverable === false || recoverable === undefined) {\n\t\t\t\tthrow new Error(`Error: ${e.err!.message}, URL: ${url}, Method: ${method}`);\n\t\t\t// 有非undefined的返回值, 可以恢复, 返回值作为结果\n\t\t\t} else {\n\t\t\t\treturn recoverable as PromiseResult;\n\t\t\t}\n\t\t} else {\n\t\t\treturn result!;\n\t\t}\n\t};\n}\n\n\n/**\n * { beforeSend, afterResponse, retry }\n */\nexport default function (opts: APIzClientConstructorOptions = {}): APIzClientInstance {\n\treturn (['get', 'head', 'post', 'put', 'patch', 'delete', 'options'] as Array<HTTPMethodLowerCase>)\n\t\t.reduce(\n\t\t\t(prev: APIzClientInstance, cur: HTTPMethodLowerCase) => (prev[cur] = createRequest({\n\t\t\t\t...opts,\n\t\t\t\tmethod: cur.toUpperCase() as HTTPMethodUpperCase\n\t\t\t}), prev),\n\t\t\t{} as APIzClientInstance\n\t\t);\n}\n"],"names":["isPromise","p","then","pRetry","fn","retry","beforeRetry","alreadyTried","rst","Number","MAX_SAFE_INTEGER","Error","call","e","createRequest","method","beforeSend","afterResponse","error","url","options","body","headers","type","handleError","$options","processData","data","contentType","isFn","result","Promise","rs","rj","ajax","success","xhr","recoverableError","err","status","unrecoverableError","$err","resData","$xhr","recoverable","message","f","opts","reduce","prev","cur","toUpperCase"],"mappings":"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"}